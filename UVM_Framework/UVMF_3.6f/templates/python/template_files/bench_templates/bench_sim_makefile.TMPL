{% set fname = "project_benches/{{name}}/sim/Makefile" %}

{% block description %}
#
#----------------------------------------------------------------------
# Project         : {{name}} Simulation Bench 
# Unit            : Bench makefile
# File            : Makefile
#----------------------------------------------------------------------
#                                          
# DESCRIPTION: This makefile includes the shared makefile and contains
#   bench level make targets.
#
{% endblock %}

{% block contents %}

# *********************************************************************************************
# UVMF library directory:
# This variable points to the UVMF release where uvmf_base_pkg directory resides.
# This variable points to release code that is not user modified.
# This variable allows for UVMF release directories to reside independent of project related verification_ip and project_benches directories.
# This code below looks "upward" for directory starting with UVMF_* and returns first match for use with the release examples.
UVMF_HOME ?= $(firstword $(wildcard $(addsuffix /UVMF_*,. .. ../.. ../../.. ../../../.. ../../../../..)))
#
# Project(s) specific verification_ip library:
# Directory where reusable verification packages for interfaces, environments, utilities, etc. reside.
# This variable allows for verification_ip to reside independent of project bench and UVMF release directories.
# For examples deployed with UVMF this will be $(UVMF_HOME)/<example_group>/verification_ip
export UVMF_VIP_LIBRARY_HOME ?= ../../../verification_ip
#
# Project specific bench:
# Directory where bench specific code is located.
# This variable allows for project_benches to reside independent of verification_ip and UVMF release directories.
# For examples deployed with UVMF this will be $(UVMF_HOME)/<example_group>/project_benches/<example_bench>
export UVMF_PROJECT_DIR ?= ../../../project_benches/{{name}}
#
{% if qvip_pkg_env_variables|length > 0 %}
# *********************************************************************************************
# QVIP specific code generated by QVIP Configurator:
# These variables identify where code generated by the QVIP configurator is located.
# The default values for these variables are to indicate to the user that the value needs to be set.
# This variable should point down to and including the uvmf directory in the QVIP confiurator generated code.
{% endif %}
{% for qvip_env_vars in qvip_pkg_env_variables %}
export {{qvip_env_vars}}_DIR_NAME ?= the_environment_variable_named_{{qvip_env_vars}}_DIR_NAME_needs_to_point_to_the_QVIP_configurator_generated_code_for_this_sub_environment
{% endfor %}
#
# *********************************************************************************************
# Set test case specific Variables
TEST_NAME            ?= test_top
TEST_SEED            ?= random
TEST_VERBOSITY       ?= UVM_HIGH
UVM_CLI_ARGS         = 

# Usage of Veloce, etc. to be input by the user (subject to defaults)
USE_VELOCE          ?= 0
USE_LEGACY_TBX_FLOW ?= 0

# Usage of Veloce and Questa profilers
USE_VELOCE_PROFILER ?= 0
USE_QUESTA_PROFILER ?= 0

{% if inFactReady %}
# Usage of inFact
USE_INFACT ?= 0
{% endif %}

# Set project Variables
TEST_PLAN_NAME       = {{name}}_TestPlan
REPORTING_DO_FILE    = {{name}}_reports_script

# Include makefile that includes targets for UVM_VIP_Library packages
include $(UVMF_HOME)/scripts/Makefile

{% if veloceReady %}
include $(UVMF_HOME)/common/uvm_co_emulation_utilities/clock/Makefile
include $(UVMF_HOME)/common/uvm_co_emulation_utilities/reset/Makefile
include $(UVMF_HOME)/common/uvm_co_emulation_utilities/memload/Makefile
{% endif %}

# Include all requisite interface package targets for this bench
{% for bfm in bfm_pkgs %}include $(UVMF_VIP_LIBRARY_HOME)/interface_packages/{{bfm}}_pkg/Makefile
{% endfor %}

# Include all requisite environment package targets for this bench
include $(UVMF_VIP_LIBRARY_HOME)/environment_packages/{{env_name}}_env_pkg/Makefile

{% if inFactReady %}
PROTOCOLS ?= {% for bfm in bfm_pkgs %} {{bfm}} {% endfor %} 

PROTOCOL ?=  PLEASE_SELECT_A_PROTOCOL_AS_DEFAULT

# Include inFact Makefile
include $(UVMF_HOME)/scripts/Makefile.inFact

INFACT_ARGS_0 =
{% for bfm in bfm_pkgs %}
INFACT_ARGS_1 += +uvm_set_type_override={{bfm}}_random_sequence,{{bfm}}_infact_sequence
INFACT_ARGS_1 += +infact=$(UVMF_VIP_LIBRARY_HOME)/interface_packages/{{bfm}}_infact_proj/{{bfm}}_infact_proj.ini
{% endfor %}
INFACT_ARGS = $(INFACT_ARGS_$(USE_INFACT))
{% endif %}

# Add to default compile/load/run arguments
VCOM_ARGS             += 

{% if veloceReady or qvip_bfm_pkgs|length > 0 %}
VLOG_ARGS             +=  -timescale 1ps/1ps +define+UVM_REPORT_DISABLE_FILE_LINE
{% else %}
VLOG_ARGS             += +define+UVM_REPORT_DISABLE_FILE_LINE
{% endif %}
VELANALYZE_ARGS       +=
VELANALYZE_HVL_ARGS   +=

BATCH_VOPT_ARGS       +=
DEBUG_VOPT_ARGS       +=
EXTRA_VOPT_TOPS       +=

COMMON_VSIM_ARGS      += {% if qvip_bfm_pkgs|length > 0 %} -mvchome $(QUESTA_MVC_HOME) {% endif %} 
{% if inFactReady %}
COMMON_VSIM_ARGS      += $(INFACT_ARGS)
{% endif %}

BATCH_VSIM_ARGS       += #-uvmcontrol=none
DEBUG_VSIM_ARGS       += 
EXTRA_VSIM_TOPS       += {% if additionalTops|length > 0 %} {% for top in additionalTops %}{{top}} {% endfor %}{% endif %}

# Do commands
                      DEBUG_DO_COMMANDS =     -do " \
                      set NoQuitOnFinish 1; \
                      onbreak {resume}; \
                      run 0; \
                      do wave.do; \
                      radix hex showbase;  \
                      "
                      # run -all; \

# Project bench package source
{{name}}_PARAMETERS_PKG =\
$(UVMF_PROJECT_DIR)/tb/parameters/{{name}}_parameters_pkg.sv

{% for ext_import in external_imports %}
{{ext_import}} =\
$(UVMF_PROJECT_DIR)/tb/parameters/{{ext_import}}.sv
{% endfor %}

{{name}}_SEQUENCES_PKG =\
$(UVMF_PROJECT_DIR)/tb/sequences/{{name}}_sequences_pkg.sv

{{name}}_TEST_PKG =\
$(UVMF_PROJECT_DIR)/tb/tests/{{name}}_test_pkg.sv

# UVMF_CHANGE_ME : Reference DUT source.
{{name}}_DUT =\
$(UVMF_PROJECT_DIR)/rtl/verilog/{{name}}.v



# Project bench package targets
COMP_{{name}}_PARAMETERS_PKG_TGT_0 = q_comp_{{name}}_parameters_pkg
COMP_{{name}}_PARAMETERS_PKG_TGT_1 = v_comp_{{name}}_parameters_pkg
COMP_{{name}}_PARAMETERS_PKG_TGT = $(COMP_{{name}}_PARAMETERS_PKG_TGT_$(USE_VELOCE))

comp_{{name}}_parameters_pkg: $(COMP_{{name}}_PARAMETERS_PKG_TGT)

q_comp_{{name}}_parameters_pkg:
	        $(HVL_COMP_CMD) +incdir+$(UVMF_PROJECT_DIR)/tb/parameters $({{name}}_PARAMETERS_PKG)

v_comp_{{name}}_parameters_pkg: q_comp_{{name}}_parameters_pkg
	$(HDL_COMP_CMD) +incdir+$(UVMF_PROJECT_DIR)/tb/parameters $({{name}}_PARAMETERS_PKG)
 
{% for ext_import in external_imports %}
comp_{{ext_import}}:
	$(HVL_COMP_CMD) +incdir+$(UVMF_PROJECT_DIR)/tb/parameters $({{ext_import}})
{% endfor %}

comp_{{name}}_sequence_pkg:
	$(HVL_COMP_CMD) +incdir+$(UVMF_PROJECT_DIR)/tb/sequences $({{name}}_SEQUENCES_PKG)

comp_{{name}}_test_pkg:
	$(HVL_COMP_CMD) +incdir+$(UVMF_PROJECT_DIR)/tb/tests $({{name}}_TEST_PKG)

# UVMF_CHANGE_ME : Add make target to compile your dut here
comp_{{name}}_dut:
	echo "Compile your DUT here"
#	$(HDL_COMP_CMD) $({{name}}_DUT)

{% if qvip_bfm_pkgs|length > 0 %}
comp_qvip:
{% endif %}
{% for qvip_env_vars in qvip_pkg_env_variables %}
	$(HVL_COMP_CMD) +incdir+$(QUESTA_MVC_HOME)/questa_mvc_src/sv/ -f $({{qvip_env_vars}}_DIR_NAME)/{{qvip_bfm_pkgs[loop.index-1]}}_filelist.f
	$(HVL_COMP_CMD) +incdir+$({{qvip_env_vars}}_DIR_NAME) $({{qvip_env_vars}}_DIR_NAME)/hdl_{{qvip_bfm_pkgs[loop.index-1]}}.sv
{% endfor %}

build: comp_uvm_pkg comp_fli_pkg comp_uvmf_base_pkg {% if qvip_bfm_pkgs|length > 0 %} comp_qvip {% endif %} {% if veloceReady %} comp_co_emulation_clock_pkg comp_co_emulation_reset_pkg comp_co_emulation_memload_pkg {% endif %} {% for bfm in bfm_pkgs %} comp_{{bfm}}_pkg {% endfor %} comp_{{env_name}}_env_pkg comp_{{name}}_parameters_pkg comp_{{name}}_sequence_pkg comp_{{name}}_test_pkg comp_{{name}}_dut comp_test_bench

{% endblock %}

