{% set fname = "verification_ip/environment_packages/{{name}}_env_pkg/src/{{name}}_environment.svh" %}
{% extends "base_template.TMPL" %}

{% block description %}
//
//----------------------------------------------------------------------
// Project         : {{name}} Environment 
// Unit            : {{name}} Environment
// File            : {{name}}_environment.svh
//----------------------------------------------------------------------
//                                          
// DESCRIPTION: This environment contains all agents, predictors and
// scoreboards required for the block level design.
{% endblock %}

{% block contents %}


class {{name}}_environment extends uvmf_environment_base #(.CONFIG_T( {{name}}_env_configuration));

  `uvm_component_utils( {{name}}_environment );


{% for sub_env in subEnvironments %}
   {{sub_env.envPkg}}_environment {{sub_env.name}};
{% endfor %}

{% for agent in agents %}
   {{agent.ifPkg}}_agent_t {{agent.name}};
{% endfor %}

{% for analysisComp in analysisComponents %}
   {{analysisComp.type}} {{analysisComp.name}};
{% endfor %}

{% for scoreboard in scoreboards %}
   typedef {{scoreboard.sType}} #({{scoreboard.tType}})  {{scoreboard.name}}_t;
   {{scoreboard.name}}_t {{scoreboard.name}};
{% endfor %}

{% for c2eConn in c2eConnections %}
  uvm_analysis_port #({{c2eConn.tType}}) {{c2eConn.name}};
{% endfor %}

// ****************************************************************************
// FUNCTION : new()
// This function is the standard SystemVerilog constructor.
//
  function new( string name = "", uvm_component parent = null );
    super.new( name, parent );
  endfunction

// ****************************************************************************
// FUNCTION: build_phase()
// This function builds all components within this environment.
//
  virtual function void build_phase(uvm_phase phase);
    super.build_phase(phase);


{% for sub_env in subEnvironments %}
   {{sub_env.name}} = {{sub_env.envPkg}}_environment::type_id::create("{{sub_env.name}}",this);
   {{sub_env.name}}.set_config(configuration.{{sub_env.name}}_config);
{% endfor %}

{% for agent in agents %}
  {{agent.name}} = {{agent.ifPkg}}_agent_t::type_id::create("{{agent.name}}",this);
{% endfor %}

{% for analysisComp in analysisComponents %}
  {{analysisComp.name}} = {{analysisComp.type}}::type_id::create("{{analysisComp.name}}",this);
{% endfor %}

{% for scoreboard in scoreboards %}
  {{scoreboard.name}} = {{scoreboard.name}}_t::type_id::create("{{scoreboard.name}}",this);
{% endfor %}

{% for c2eConn in c2eConnections %}
  {{c2eConn.name}} = new("{{c2eConn.name}}",this);
{% endfor %}

  endfunction

// ****************************************************************************
// FUNCTION: connect_phase()
// This function makes all connections within this environment.  Connections
// typically inclue agent to predictor, predictor to scoreboard and scoreboard
// to agent.
//
  virtual function void connect_phase(uvm_phase phase);
    super.connect_phase(phase);

{% for conn in connections %}
   {{conn.name}}.{{conn.pName}}.connect({{conn.subscriberName}}.{{conn.aeName}});
{% endfor %}

  endfunction

endclass

{% endblock %}
