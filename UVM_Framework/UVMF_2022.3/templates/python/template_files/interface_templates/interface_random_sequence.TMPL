{% set fname = "{{vip_location}}/{{interface_location}}/{{name}}_pkg/{{src_dir}}{{name}}_random_sequence.svh" %}
{% extends "base_template.TMPL" %}

{% block description %}
//----------------------------------------------------------------------
//     
// DESCRIPTION: 
// This sequences randomizes the {{name}} transaction and sends it 
// to the UVM driver.
//
// This sequence constructs and randomizes a {{name}}_transaction.
// 
//----------------------------------------------------------------------
{% endblock %}
{% block contents %}
class {{name}}_random_sequence {{macro.paramDeclare(paramDefs)|indent(6)}}
  extends {{name}}_sequence_base {{macro.paramUse(paramDefs)|indent(6)}};

{{macro.objUtils([name,'_random_sequence']|join(""),paramDefs)}}

  // pragma uvmf custom class_item_additional begin
  // pragma uvmf custom class_item_additional end
  
  //*****************************************************************
  function new(string name = "");
    super.new(name);
  endfunction: new

  // ****************************************************************************
  // TASK : body()
  // This task is automatically executed when this sequence is started using the 
  // start(sequencerHandle) task.
  //
  task body();
  
      // Construct the transaction
      req={{name}}_transaction{{macro.paramUse(paramDefs)|indent(16)}}::type_id::create("req");
      start_item(req);
      // Randomize the transaction
      if(!req.randomize()) `uvm_fatal("SEQ", "{{name}}_random_sequence::body()-{{name}}_transaction randomization failed")
      // Send the transaction to the {{name}}_driver_bfm via the sequencer and {{name}}_driver.
      finish_item(req);
      `uvm_info("SEQ", {"Response:",req.convert2string()},UVM_MEDIUM)

  endtask

endclass: {{name}}_random_sequence

// pragma uvmf custom external begin
// pragma uvmf custom external end

{% endblock %}
