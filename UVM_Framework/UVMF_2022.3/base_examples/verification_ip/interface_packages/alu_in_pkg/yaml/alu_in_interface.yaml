uvmf:
  interfaces:
    alu_in:
      clock: clk
      config_constraints: []
      config_vars: []
      existing_library_component: 'True'
      gen_inbound_streaming_driver: 'False'
      hdl_pkg_parameters: []
      hdl_typedefs:
      - name: alu_in_op_t
        type: enum bit[2:0] { add_op = 3'b001, and_op = 3'b010, xor_op = 3'b011, mul_op = 3'b100}
      hvl_pkg_parameters: []
      hvl_typedefs: []
      parameters:
      - name: ALU_IN_OP_WIDTH
        type: int
        value: '8'
      ports:
      - dir: output
        name: alu_rst
        reset_value: '''b0'
        width: '1'
      - dir: input
        name: ready
        reset_value: '''b0'
        width: '1'
      - dir: output
        name: valid
        reset_value: '''b0'
        width: '1'
      - dir: output
        name: op
        reset_value: '''b0'
        width: '3'
      - dir: output
        name: a
        reset_value: '''b0'
        width: ALU_IN_OP_WIDTH
      - dir: output
        name: b
        reset_value: '''b0'
        width: ALU_IN_OP_WIDTH
      reset: rst
      reset_assertion_level: 'False'
      response_info:
        data: []
        operation: 1'b1
      transaction_constraints:
      - name: valid_op_c
        value: '{ op inside {add_op, and_op, xor_op, mul_op}; }'
      transaction_vars:
      - iscompare: 'True'
        isrand: 'True'
        name: op
        type: alu_in_op_t
        unpacked_dimension: ''
      - iscompare: 'True'
        isrand: 'True'
        name: a
        type: bit [ALU_IN_OP_WIDTH-1:0]
        unpacked_dimension: ''
      - iscompare: 'True'
        isrand: 'True'
        name: b
        type: bit [ALU_IN_OP_WIDTH-1:0]
        unpacked_dimension: ''
      use_dpi_link: 'False'
