uvmf:
  interfaces:
    "i3c_s":
      clock: "clock"
      reset: "reset"
      reset_assertion_level: "True"
      veloce_ready: "True"
      #existing_library_component: "True"
      #imports:
      # - { name: "i3c_global_pkg"}
      
      ports:
        - name: "scl_i"   
          width: "1"        
          dir: "input"
          reset_value: "1'b0"
        - name: "scl_o"   
          width: "1"        
          dir: "output"
          reset_value: "1'b0"
        - name: "sda_o"   
          width: "1"        
          dir: "output"
          reset_value: "1'b0"
        - name: "sda_i"   
          width: "1"        
          dir: "input"
          reset_value: "1'b0"
        - name: "scl_oen"   
          width: "1"        
          dir: "output"
          reset_value: "1'b0"
        - name: "sda_oen"   
          width: "1"        
          dir: "output"
          reset_value: "1'b0"

      config_vars:
        - name: "is_active"
          type: "uvm_active_passive_enum"
          isrand: "False"
        - name: "slave_id"
          type: "int"
          isrand: "False"
        - name: "shift_dir"
          type: "shift_direction_e"
          isrand: "False"
        - name: "slave_address"
          type: "bit [SLAVE_ADDRESS_WIDTH-1:0]"
          isrand: "False"
          #unpacked_dimension: "[]"
        - name: "slave_memory"
          type: "bit [7:0]"
          isrand: "False"
          #   unpacked_dimension: "[longint]"
        #- name: "primary_prescalar"
        #  type: "bit [2:0]"
        #  isrand: "True"
        #- name: "secondary_prescalar"
        #  type: "bit [2:0]"
        #  isrand: "True"
        # - name: "baudrate_divisor"
        #  type: "int"
        #  isrand: "False"
        - name: "has_coverage"
          type: "bit"
      transaction_vars:
        - name: "read_write"
          type: "read_write_e"
          isrand: "True"
          iscompare: "True"
          #unpacked_dimension: "[1000]"
        - name: "scl"
          type: "bit"
          isrand: "False"
          iscompare: "True"
        - name: "sda"
          type: "bit"
          isrand: "True"
          iscompare: "True"
        - name: "wr_data"
          type: "bit [DATA_WIDTH-1:0]"
          isrand: "True"
          iscompare: "True"
        # unpacked_dimension: "[]"
        - name: "rd_data"
          type: "bit [DATA_WIDTH-1:0] "
          isrand: "True"
          iscompare: "True"
        # unpacked_dimension: "[]"
        - name: "slave_address"
          type: "bit [SLAVE_ADDRESS_WIDTH-1:0]"
          isrand: "True"
          iscompare: "True"
          #  - name: "register_address"
          # type: "bit [REGISTER_ADDRESS_WIDTH-1:0]" 
          #isrand: "True"
          #iscompare: "True"
        - name: "size"
          type: "bit [31:0]"
          isrand: "True"
          iscompare: "True"
        - name: "ack"
          type: "bit"
          isrand: "False"
          iscompare: "True"
        - name: "index"
          type: "bit [NO_OF_SLAVES-1:0]"
          isrand: "True"
          iscompare: "True"
        - name: "raddr"
          type: "bit [7:0]"
          isrand: "True"
          iscompare: "True"
          #        - name: "slave_add_ack"
          # type: "bit"
          #isrand: "True"
        #  value: "1'b1"
        #iscompare: "True"
        # - name: "reg_add_ack"
        #  type: "bit"
        #  isrand: "True"         
        #  iscompare: "True"
        # - name: "wr_data_ack"
        # type: "bit"
        # iscompare: "True"
        # unpacked_dimension: "[$]"

        # transaction_constraints: 
        #- name: "sl_ack_con"
        #  value: "{ slave_add_ack==1; }"
        #- name: "reg_ack_con"
        #  value: "{ reg_add_ack==1; }"
