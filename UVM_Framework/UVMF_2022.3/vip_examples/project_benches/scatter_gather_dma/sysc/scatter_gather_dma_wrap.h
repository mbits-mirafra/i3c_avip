// Autogenerated from wrapper_gen.py on Fri, 15 May 2020 01:23:26 +0000
// Arguments: Namespace(clock_name='clk', clock_period='10', exec_name='sim_sc', not_top_level=None, obj_name='top.dma1')
// augmented for Catapult 10.6 updates...

#pragma once

// --------------------------------------------------------------------------------
// Headers required for SystemC and Connections
//
#include <stdlib.h>
#include <systemc.h>
#include <mc_connections.h>
#include <ac_sysc_macros.h>

#include "scatter_gather_dma.h"

class scatter_gather_dma_wrap : public sc_module {
public:
  scatter_gather_dma CCS_INIT_S1(scatter_gather_dma_inst);
  
  sc_core::sc_in<bool>  CCS_INIT_S1(clk);
  sc_core::sc_in<bool>  CCS_INIT_S1(rst_bar);
  sc_out<sc_lv<44>> CCS_INIT_S1(r_master0_ar_dat);
  sc_out<bool>     CCS_INIT_S1(r_master0_ar_vld);
  sc_in<bool>      CCS_INIT_S1(r_master0_ar_rdy);
  sc_in<sc_lv<71>> CCS_INIT_S1(r_master0_r_dat);
  sc_in<bool>      CCS_INIT_S1(r_master0_r_vld);
  sc_out<bool>     CCS_INIT_S1(r_master0_r_rdy);
  sc_out<sc_lv<44>> CCS_INIT_S1(w_master0_aw_dat);
  sc_out<bool>     CCS_INIT_S1(w_master0_aw_vld);
  sc_in<bool>      CCS_INIT_S1(w_master0_aw_rdy);
  sc_out<sc_lv<73>> CCS_INIT_S1(w_master0_w_dat);
  sc_out<bool>     CCS_INIT_S1(w_master0_w_vld);
  sc_in<bool>      CCS_INIT_S1(w_master0_w_rdy);
  sc_in<sc_lv<6>> CCS_INIT_S1(w_master0_b_dat);
  sc_in<bool>      CCS_INIT_S1(w_master0_b_vld);
  sc_out<bool>     CCS_INIT_S1(w_master0_b_rdy);
  sc_in<sc_lv<32>> CCS_INIT_S1(r_slave0_ar_dat);
  sc_in<bool>      CCS_INIT_S1(r_slave0_ar_vld);
  sc_out<bool>     CCS_INIT_S1(r_slave0_ar_rdy);
  sc_out<sc_lv<34>> CCS_INIT_S1(r_slave0_r_dat);
  sc_out<bool>     CCS_INIT_S1(r_slave0_r_vld);
  sc_in<bool>      CCS_INIT_S1(r_slave0_r_rdy);
  sc_in<sc_lv<32>> CCS_INIT_S1(w_slave0_aw_dat);
  sc_in<bool>      CCS_INIT_S1(w_slave0_aw_vld);
  sc_out<bool>     CCS_INIT_S1(w_slave0_aw_rdy);
  sc_in<sc_lv<32>> CCS_INIT_S1(w_slave0_w_dat);
  sc_in<bool>      CCS_INIT_S1(w_slave0_w_vld);
  sc_out<bool>     CCS_INIT_S1(w_slave0_w_rdy);
  sc_out<sc_lv<2>> CCS_INIT_S1(w_slave0_b_dat);
  sc_out<bool>     CCS_INIT_S1(w_slave0_b_vld);
  sc_in<bool>      CCS_INIT_S1(w_slave0_b_rdy);
  sc_out<sc_lv<1>> CCS_INIT_S1(dma_done_dat);
  sc_out<bool>     CCS_INIT_S1(dma_done_vld);
  sc_in<bool>      CCS_INIT_S1(dma_done_rdy);
 
  sc_clock connections_clk;
  sc_event check_event;
 
  SC_CTOR(scatter_gather_dma_wrap)
   // : connections_clk("connections_clk", 10, SC_NS, 0.5,0,SC_NS,true)
   : connections_clk("connections_clk", 10, SC_NS, 0.5,0,SC_NS,false)

  {
    Connections::get_sim_clk().add_clock_alias(connections_clk.posedge_event(), clk.posedge_event());
    Connections::set_sim_clk(&connections_clk);
    
    SC_METHOD(check_clock);
    sensitive << connections_clk;
    sensitive << clk;
    
    SC_METHOD(check_event_method);
    sensitive << check_event;
    
    #ifdef ENABLE_TRACE_HIER
    trace_file_ptr = sc_create_vcd_trace_file("trace");
    trace_hierarchy(this, trace_file_ptr);
    #endif
  
    scatter_gather_dma_inst.clk(clk);
    scatter_gather_dma_inst.rst_bar(rst_bar);
    scatter_gather_dma_inst.r_master0.ar.dat(r_master0_ar_dat);
    scatter_gather_dma_inst.r_master0.ar.vld(r_master0_ar_vld);
    scatter_gather_dma_inst.r_master0.ar.rdy(r_master0_ar_rdy);
    scatter_gather_dma_inst.r_master0.r.dat(r_master0_r_dat);
    scatter_gather_dma_inst.r_master0.r.vld(r_master0_r_vld);
    scatter_gather_dma_inst.r_master0.r.rdy(r_master0_r_rdy);
    scatter_gather_dma_inst.w_master0.aw.dat(w_master0_aw_dat);
    scatter_gather_dma_inst.w_master0.aw.vld(w_master0_aw_vld);
    scatter_gather_dma_inst.w_master0.aw.rdy(w_master0_aw_rdy);
    scatter_gather_dma_inst.w_master0.w.dat(w_master0_w_dat);
    scatter_gather_dma_inst.w_master0.w.vld(w_master0_w_vld);
    scatter_gather_dma_inst.w_master0.w.rdy(w_master0_w_rdy);
    scatter_gather_dma_inst.w_master0.b.dat(w_master0_b_dat);
    scatter_gather_dma_inst.w_master0.b.vld(w_master0_b_vld);
    scatter_gather_dma_inst.w_master0.b.rdy(w_master0_b_rdy);
    scatter_gather_dma_inst.r_slave0.ar.dat(r_slave0_ar_dat);
    scatter_gather_dma_inst.r_slave0.ar.vld(r_slave0_ar_vld);
    scatter_gather_dma_inst.r_slave0.ar.rdy(r_slave0_ar_rdy);
    scatter_gather_dma_inst.r_slave0.r.dat(r_slave0_r_dat);
    scatter_gather_dma_inst.r_slave0.r.vld(r_slave0_r_vld);
    scatter_gather_dma_inst.r_slave0.r.rdy(r_slave0_r_rdy);
    scatter_gather_dma_inst.w_slave0.aw.dat(w_slave0_aw_dat);
    scatter_gather_dma_inst.w_slave0.aw.vld(w_slave0_aw_vld);
    scatter_gather_dma_inst.w_slave0.aw.rdy(w_slave0_aw_rdy);
    scatter_gather_dma_inst.w_slave0.w.dat(w_slave0_w_dat);
    scatter_gather_dma_inst.w_slave0.w.vld(w_slave0_w_vld);
    scatter_gather_dma_inst.w_slave0.w.rdy(w_slave0_w_rdy);
    scatter_gather_dma_inst.w_slave0.b.dat(w_slave0_b_dat);
    scatter_gather_dma_inst.w_slave0.b.vld(w_slave0_b_vld);
    scatter_gather_dma_inst.w_slave0.b.rdy(w_slave0_b_rdy);
    scatter_gather_dma_inst.dma_done.dat(dma_done_dat);
    scatter_gather_dma_inst.dma_done.vld(dma_done_vld);
    scatter_gather_dma_inst.dma_done.rdy(dma_done_rdy);
  }
  
  // following are now defined within scatter_gather_dma_wrap.cpp
  void check_clock();
  
  void check_event_method();

};

